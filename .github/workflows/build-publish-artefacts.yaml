# TODO Readme on docker hub / ghcr.io
name: Build and Publish artefacts

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    name: "Image: ${{ matrix.image.name }}"
    strategy:
      matrix:
        image:
          - name: wapop
            context: .
          - name: network-manager
            context: network-manager

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository_owner }}/${{ matrix.image.name }}
            ghcr.io/${{ github.repository }}/${{ matrix.image.name }}
          tags: |
            type=ref,event=branch
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}        

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: push
        with:
          context: ${{ matrix.image.context }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release-chart:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Write release version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Chart | Push
        uses: appany/helm-oci-chart-releaser@v0.3.0
        with:
          name: wapop-chart
          repository: ${{ github.repository_owner }}
          tag: ${{ env.VERSION }}
          path: chart
          registry: ghcr.io
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          update_dependencies: 'true' 