apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: wapop
    control-plane: controller-manager
  name: wapop
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: accesspoints.wifi.networking.platyplus.io
spec:
  group: wifi.networking.platyplus.io
  names:
    kind: AccessPoint
    listKind: AccessPointList
    plural: accesspoints
    shortNames:
    - apn
    singular: accesspoint
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AccessPoint is the Schema for the accesspoints API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AccessPointSpec defines the desired state of AccessPoint
            type: object
          status:
            description: AccessPointStatus defines the observed state of AccessPoint
            properties:
              bootID:
                type: string
              hash:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: wapop
  name: wapop-controller-manager
  namespace: wapop
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: wapop
  name: wapop-leader-election-role
  namespace: wapop
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: wapop
  name: wapop-accesspoint-editor-role
rules:
- apiGroups:
  - wifi.networking.platyplus.io
  resources:
  - accesspoints
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - wifi.networking.platyplus.io
  resources:
  - accesspoints/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: wapop
  name: wapop-accesspoint-viewer-role
rules:
- apiGroups:
  - wifi.networking.platyplus.io
  resources:
  - accesspoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - wifi.networking.platyplus.io
  resources:
  - accesspoints/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wapop-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - wifi.networking.platyplus.io
  resources:
  - accesspoints
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - wifi.networking.platyplus.io
  resources:
  - accesspoints/finalizers
  verbs:
  - update
- apiGroups:
  - wifi.networking.platyplus.io
  resources:
  - accesspoints/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wapop-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wapop-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: wapop
  name: wapop-leader-election-rolebinding
  namespace: wapop
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: wapop-leader-election-role
subjects:
- kind: ServiceAccount
  name: wapop-controller-manager
  namespace: wapop
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: wapop
  name: wapop-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wapop-manager-role
subjects:
- kind: ServiceAccount
  name: wapop-controller-manager
  namespace: wapop
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wapop-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wapop-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: wapop-controller-manager
  namespace: wapop
---
apiVersion: v1
data:
  enable-ap.sh: |-
    #!/bin/bash

    # Define variables
    SSID="$ssid"
    PSK="$psk"
    CON_NAME="wlan0-ap"
    IFNAME="wlan0"
    MASTER="br0"

    # Check if the connection exists
    if nmcli connection show "$CON_NAME" > /dev/null 2>&1; then
        # Check if settings match
        CURRENT_SSID=$(nmcli -g 802-11-wireless.ssid connection show "$CON_NAME")
        CURRENT_PSK=$(nmcli -g 802-11-wireless-security.psk connection show "$CON_NAME")

        if [[ "$CURRENT_SSID" == "$SSID" && "$CURRENT_PSK" == "$PSK" ]]; then
            echo "Connection '$CON_NAME' is already configured correctly. Exiting."
            exit 0
        else
            echo "Updating connection '$CON_NAME' with new settings. SSID: $SSID"
            nmcli connection modify "$CON_NAME" 802-11-wireless.ssid "$SSID" \
                802-11-wireless-security.psk "$PSK"
        fi
    else
        # Create a new connection if it doesn't exist
        echo "Creating new connection '$CON_NAME'. SSID: $SSID"
        nmcli connection add type wifi \
            ifname "$IFNAME" \
            con-name "$CON_NAME" \
            ssid "$SSID" \
            mode ap \
            ipv4.method shared \
            wifi.band bg \
            wifi.channel 6 \
            wifi-sec.key-mgmt wpa-psk \
            wifi-sec.psk "$PSK" \
            connection.master "$MASTER" \
            connection.slave-type bridge
    fi

    # Bring up the connection
    nmcli connection up "$CON_NAME"
kind: ConfigMap
metadata:
  name: wapop-scripts
  namespace: wapop
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: wapop
    control-plane: controller-manager
  name: wapop-controller-manager-metrics-service
  namespace: wapop
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: wapop
    control-plane: controller-manager
  name: wapop-controller-manager
  namespace: wapop
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        image: controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: wapop-controller-manager
      terminationGracePeriodSeconds: 10
